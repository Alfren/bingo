{"ast":null,"code":"var _jsxFileName = \"H:\\\\DarkSaber\\\\bingo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DBConfig } from \"./DBConfig\";\nimport { initDB } from \"react-indexed-db\";\nimport { useIndexedDB } from \"react-indexed-db\";\nimport Groups from \"./Groups\";\nimport NewGroupForm from \"./NewGroupForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ninitDB(DBConfig);\nexport default function App() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const db = useIndexedDB(\"Groups\");\n  useEffect(() => {\n    db.getAll().then(resp => {\n      setGroups(resp);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewGroupForm, {\n      db: db\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), groups.map(group => /*#__PURE__*/_jsxDEV(Groups, {\n      group: group\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(App, \"1XEt1v/65a0tgs1+WI6m5mBezJI=\", false, function () {\n  return [useIndexedDB];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DBConfig","initDB","useIndexedDB","Groups","NewGroupForm","App","groups","setGroups","db","getAll","then","resp","error","console","log","map","group","id"],"sources":["H:/DarkSaber/bingo/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DBConfig } from \"./DBConfig\";\nimport { initDB } from \"react-indexed-db\";\nimport { useIndexedDB } from \"react-indexed-db\";\nimport Groups from \"./Groups\";\nimport NewGroupForm from \"./NewGroupForm\";\ninitDB(DBConfig);\n\nexport default function App() {\n  const [groups, setGroups] = useState([]);\n  const db = useIndexedDB(\"Groups\");\n  useEffect(() => {\n    db.getAll().then(\n      (resp) => {\n        setGroups(resp);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }, []);\n\n  return (\n    <>\n      <NewGroupForm db={db} />\n      {groups.map((group) => (\n        <Groups key={group.id} group={group} />\n      ))}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAAA;AAC1CH,MAAM,CAACD,QAAQ,CAAC;AAEhB,eAAe,SAASK,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,EAAE,GAAGN,YAAY,CAAC,QAAQ,CAAC;EACjCJ,SAAS,CAAC,MAAM;IACdU,EAAE,CAACC,MAAM,EAAE,CAACC,IAAI,CACbC,IAAI,IAAK;MACRJ,SAAS,CAACI,IAAI,CAAC;IACjB,CAAC,EACAC,KAAK,IAAK;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE,QAAC,YAAY;MAAC,EAAE,EAAEJ;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,EACvBF,MAAM,CAACS,GAAG,CAAEC,KAAK,iBAChB,QAAC,MAAM;MAAgB,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QACtB,CAAC;EAAA,gBACD;AAEP;AAAC,GAtBuBZ,GAAG;EAAA,QAEdH,YAAY;AAAA;AAAA,KAFDG,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}