{"ast":null,"code":"import _objectSpread from\"H:/DarkSaber/bingo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"H:/DarkSaber/bingo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Button,Container,IconButton,Typography}from\"@mui/material\";import NewGroupModal from\"./components/NewGroupModal\";import{initDB,useIndexedDB}from\"react-indexed-db\";import{DBConfig}from\"./DBConfig\";import{useSnackbar}from\"notistack\";import{Add}from\"@mui/icons-material\";import Group from\"./components/Group\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";initDB(DBConfig);export default function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),groups=_useState4[0],setGroups=_useState4[1];var toggle=function toggle(){return setShow(!show);};var db=useIndexedDB(\"Groups\");var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var getAllGroups=function getAllGroups(){db.getAll().then(function(resp){setGroups(resp);if(resp.length===0){setShow(true);}},function(error){console.error(error);});};useEffect(function(){getAllGroups();},[]);var createGroup=function createGroup(_ref){var groupName=_ref.groupName,groupCount=_ref.groupCount,groupMin=_ref.groupMin;db.add({name:groupName,count:shuffle(Number(groupCount),Number(groupMin)),min:Number(groupMin),total:Number(groupCount),next:0,expanded:true}).then(function(resp){setShow(false);enqueueSnackbar(\"Group created!\",{variant:\"success\"});getAllGroups();},function(error){console.error(error);enqueueSnackbar(\"Error while creating group..\",{variant:\"error\"});enqueueSnackbar(\"\".concat(error.target.error),{variant:\"error\"});});};var updateGroup=function updateGroup(group){db.update(group).then(function(resp){getAllGroups();},function(error){console.error(error);enqueueSnackbar(\"Error updating group..\",{variant:\"error\"});enqueueSnackbar(\"\".concat(error.target.error),{variant:\"error\"});});};var removeGroup=function removeGroup(id){db.deleteRecord(id).then(function(resp){getAllGroups();},function(error){console.error(error);enqueueSnackbar(\"Error removing group..\",{variant:\"error\"});enqueueSnackbar(\"\".concat(error.target.error),{variant:\"error\"});});};function shuffle(total,min){// create array of numbers of 'number' length\nvar array=Array.from({length:min+total},function(_,i){return i;}),i=array.length,j=0,temp;while(i--){j=Math.floor(Math.random()*(i+1));// swap randomly chosen element with current element\ntemp=array[i];array[i]=array[j];array[j]=temp;}return array.filter(function(num){return num>=min;});}var resetGroup=function resetGroup(group){updateGroup(_objectSpread(_objectSpread({},group),{},{count:shuffle(group.total,group.min),next:0,min:Number(group.min),total:Number(group.total)}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{color:\"white\",my:2.6,children:\"Made with \\u2764 by Mein Mann, Wizard\"}),/*#__PURE__*/_jsx(Button,{color:\"warning\",variant:\"contained\",sx:{position:\"absolute\",top:10,right:15},onClick:toggle,children:/*#__PURE__*/_jsx(Add,{sx:{fontSize:35}})}),/*#__PURE__*/_jsx(NewGroupModal,{show:show,toggle:toggle,createGroup:createGroup}),/*#__PURE__*/_jsx(Container,{children:groups.map(function(group){return/*#__PURE__*/_jsx(Group,{group:group,updateGroup:updateGroup,removeGroup:removeGroup,resetGroup:resetGroup},group.id);})})]});}","map":{"version":3,"names":["React","useEffect","useState","Button","Container","IconButton","Typography","NewGroupModal","initDB","useIndexedDB","DBConfig","useSnackbar","Add","Group","App","show","setShow","groups","setGroups","toggle","db","enqueueSnackbar","getAllGroups","getAll","then","resp","length","error","console","createGroup","groupName","groupCount","groupMin","add","name","count","shuffle","Number","min","total","next","expanded","variant","target","updateGroup","group","update","removeGroup","id","deleteRecord","array","Array","from","_","i","j","temp","Math","floor","random","filter","num","resetGroup","position","top","right","fontSize","map"],"sources":["H:/DarkSaber/bingo/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Container, IconButton, Typography } from \"@mui/material\";\nimport NewGroupModal from \"./components/NewGroupModal\";\nimport { initDB, useIndexedDB } from \"react-indexed-db\";\nimport { DBConfig } from \"./DBConfig\";\nimport { useSnackbar } from \"notistack\";\nimport { Add } from \"@mui/icons-material\";\nimport Group from \"./components/Group\";\n\ninitDB(DBConfig);\n\nexport default function App() {\n  const [show, setShow] = useState(false);\n  const [groups, setGroups] = useState([]);\n  const toggle = () => setShow(!show);\n  const db = useIndexedDB(\"Groups\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const getAllGroups = () => {\n    db.getAll().then(\n      (resp) => {\n        setGroups(resp);\n        if (resp.length === 0) {\n          setShow(true);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  useEffect(() => {\n    getAllGroups();\n  }, []);\n\n  const createGroup = ({ groupName, groupCount, groupMin }) => {\n    db.add({\n      name: groupName,\n      count: shuffle(Number(groupCount), Number(groupMin)),\n      min: Number(groupMin),\n      total: Number(groupCount),\n      next: 0,\n      expanded: true,\n    }).then(\n      (resp) => {\n        setShow(false);\n        enqueueSnackbar(\"Group created!\", { variant: \"success\" });\n        getAllGroups();\n      },\n      (error) => {\n        console.error(error);\n        enqueueSnackbar(\"Error while creating group..\", { variant: \"error\" });\n        enqueueSnackbar(`${error.target.error}`, { variant: \"error\" });\n      }\n    );\n  };\n\n  const updateGroup = (group) => {\n    db.update(group).then(\n      (resp) => {\n        getAllGroups();\n      },\n      (error) => {\n        console.error(error);\n        enqueueSnackbar(\"Error updating group..\", { variant: \"error\" });\n        enqueueSnackbar(`${error.target.error}`, { variant: \"error\" });\n      }\n    );\n  };\n\n  const removeGroup = (id) => {\n    db.deleteRecord(id).then(\n      (resp) => {\n        getAllGroups();\n      },\n      (error) => {\n        console.error(error);\n        enqueueSnackbar(\"Error removing group..\", { variant: \"error\" });\n        enqueueSnackbar(`${error.target.error}`, { variant: \"error\" });\n      }\n    );\n  };\n\n  function shuffle(total, min) {\n    // create array of numbers of 'number' length\n    let array = Array.from({ length: min + total }, (_, i) => i),\n      i = array.length,\n      j = 0,\n      temp;\n    while (i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      // swap randomly chosen element with current element\n      temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array.filter((num) => num >= min);\n  }\n\n  const resetGroup = (group) => {\n    updateGroup({\n      ...group,\n      count: shuffle(group.total, group.min),\n      next: 0,\n      min: Number(group.min),\n      total: Number(group.total),\n    });\n  };\n\n  return (\n    <>\n      <Typography color=\"white\" my={2.6}>\n        Made with ‚ù§ by Mein Mann, Wizard\n      </Typography>\n      <Button\n        color=\"warning\"\n        variant=\"contained\"\n        sx={{ position: \"absolute\", top: 10, right: 15 }}\n        onClick={toggle}\n      >\n        <Add sx={{ fontSize: 35 }} />\n      </Button>\n      <NewGroupModal show={show} toggle={toggle} createGroup={createGroup} />\n      <Container>\n        {groups.map((group) => (\n          <Group\n            key={group.id}\n            group={group}\n            updateGroup={updateGroup}\n            removeGroup={removeGroup}\n            resetGroup={resetGroup}\n          />\n        ))}\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}