{"ast":null,"code":"var _jsxFileName = \"H:\\\\DarkSaber\\\\bingo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { DBConfig } from \"./DBConfig\";\nimport { initDB } from \"react-indexed-db\";\nimport { useIndexedDB } from \"react-indexed-db\";\nimport Groups from \"./Groups\";\nimport NewGroupForm from \"./NewGroupForm\";\nimport { blue } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninitDB(DBConfig);\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: blue\n  }\n});\nexport default function App() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const db = useIndexedDB(\"Groups\");\n  useEffect(() => {\n    db.getAll().then(resp => {\n      setGroups(resp);\n    }, error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(NewGroupForm, {\n      db: db\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), groups.map(group => /*#__PURE__*/_jsxDEV(Groups, {\n      group: group\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1XEt1v/65a0tgs1+WI6m5mBezJI=\", false, function () {\n  return [useIndexedDB];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","createTheme","ThemeProvider","DBConfig","initDB","useIndexedDB","Groups","NewGroupForm","blue","theme","palette","mode","primary","App","groups","setGroups","db","getAll","then","resp","error","console","map","group","id"],"sources":["H:/DarkSaber/bingo/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { DBConfig } from \"./DBConfig\";\nimport { initDB } from \"react-indexed-db\";\nimport { useIndexedDB } from \"react-indexed-db\";\nimport Groups from \"./Groups\";\nimport NewGroupForm from \"./NewGroupForm\";\nimport { blue } from \"@mui/material/colors\";\ninitDB(DBConfig);\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: blue,\n  },\n});\n\nexport default function App() {\n  const [groups, setGroups] = useState([]);\n  const db = useIndexedDB(\"Groups\");\n  useEffect(() => {\n    db.getAll().then(\n      (resp) => {\n        setGroups(resp);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NewGroupForm db={db} />\n      {groups.map((group) => (\n        <Groups key={group.id} group={group} />\n      ))}\n    </ThemeProvider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,IAAI,QAAQ,sBAAsB;AAAC;AAC5CJ,MAAM,CAACD,QAAQ,CAAC;AAEhB,MAAMM,KAAK,GAAGR,WAAW,CAAC;EACxBS,OAAO,EAAE;IACPC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAEJ;EACX;AACF,CAAC,CAAC;AAEF,eAAe,SAASK,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMgB,EAAE,GAAGX,YAAY,CAAC,QAAQ,CAAC;EACjCN,SAAS,CAAC,MAAM;IACdiB,EAAE,CAACC,MAAM,EAAE,CAACC,IAAI,CACbC,IAAI,IAAK;MACRJ,SAAS,CAACI,IAAI,CAAC;IACjB,CAAC,EACAC,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,aAAa;IAAC,KAAK,EAAEX,KAAM;IAAA,wBAC1B,QAAC,YAAY;MAAC,EAAE,EAAEO;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,EACvBF,MAAM,CAACQ,GAAG,CAAEC,KAAK,iBAChB,QAAC,MAAM;MAAgB,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QACtB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACY;AAEpB;AAAC,GAtBuBX,GAAG;EAAA,QAEdR,YAAY;AAAA;AAAA,KAFDQ,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}