{"ast":null,"code":"var _jsxFileName = \"H:\\\\DarkSaber\\\\bingo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport NewGroupModal from \"./components/NewGroupModal\";\nimport { initDB, useIndexedDB } from \"react-indexed-db\";\nimport { DBConfig } from \"./DBConfig\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ninitDB(DBConfig);\nexport default function App() {\n  _s();\n  const [show, setShow] = useState(true);\n  const [groups, setGroups] = useState([]);\n  const toggle = () => setShow(!show);\n  const db = useIndexedDB(\"Groups\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const getAllGroups = () => {\n    db.getAll().then(resp => {\n      setGroups(resp);\n    }, error => {\n      console.error(error);\n    });\n  };\n  useEffect(() => {\n    getAllGroups();\n  }, []);\n  const createGroup = _ref => {\n    let {\n      groupName,\n      groupCount,\n      groupMin\n    } = _ref;\n    db.add({\n      name: groupName,\n      count: groupCount,\n      min: groupMin,\n      next: 0,\n      expanded: true\n    }).then(resp => {\n      enqueueSnackbar(\"Group created!\", {\n        variant: \"success\"\n      });\n      getAllGroups();\n    }, error => {\n      console.error(error);\n      enqueueSnackbar(\"Error while creating group..\", {\n        variant: \"error\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"white\",\n      children: \"Made with \\u2764 by Mein Mann, Wizard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewGroupModal, {\n      show: show,\n      toggle: toggle,\n      createGroup: createGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rWLkUJJYqyFm+nTF2gr02ULYMyk=\", false, function () {\n  return [useIndexedDB, useSnackbar];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Typography","NewGroupModal","initDB","useIndexedDB","DBConfig","useSnackbar","App","show","setShow","groups","setGroups","toggle","db","enqueueSnackbar","getAllGroups","getAll","then","resp","error","console","createGroup","groupName","groupCount","groupMin","add","name","count","min","next","expanded","variant"],"sources":["H:/DarkSaber/bingo/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport NewGroupModal from \"./components/NewGroupModal\";\nimport { initDB, useIndexedDB } from \"react-indexed-db\";\nimport { DBConfig } from \"./DBConfig\";\nimport { useSnackbar } from \"notistack\";\n\ninitDB(DBConfig);\n\nexport default function App() {\n  const [show, setShow] = useState(true);\n  const [groups, setGroups] = useState([]);\n  const toggle = () => setShow(!show);\n  const db = useIndexedDB(\"Groups\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const getAllGroups = () => {\n    db.getAll().then(\n      (resp) => {\n        setGroups(resp);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  useEffect(() => {\n    getAllGroups();\n  }, []);\n\n  const createGroup = ({ groupName, groupCount, groupMin }) => {\n    db.add({\n      name: groupName,\n      count: groupCount,\n      min: groupMin,\n      next: 0,\n      expanded: true,\n    }).then(\n      (resp) => {\n        enqueueSnackbar(\"Group created!\", { variant: \"success\" });\n        getAllGroups();\n      },\n      (error) => {\n        console.error(error);\n        enqueueSnackbar(\"Error while creating group..\", { variant: \"error\" });\n      }\n    );\n  };\n\n  return (\n    <>\n      <Typography color=\"white\">Made with ‚ù§ by Mein Mann, Wizard</Typography>\n\n      <NewGroupModal show={show} toggle={toggle} createGroup={createGroup} />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,MAAM,EAAEC,YAAY,QAAQ,kBAAkB;AACvD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,WAAW,QAAQ,WAAW;AAAC;AAAA;AAExCH,MAAM,CAACE,QAAQ,CAAC;AAEhB,eAAe,SAASE,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMY,MAAM,GAAG,MAAMH,OAAO,CAAC,CAACD,IAAI,CAAC;EACnC,MAAMK,EAAE,GAAGT,YAAY,CAAC,QAAQ,CAAC;EACjC,MAAM;IAAEU;EAAgB,CAAC,GAAGR,WAAW,EAAE;EAEzC,MAAMS,YAAY,GAAG,MAAM;IACzBF,EAAE,CAACG,MAAM,EAAE,CAACC,IAAI,CACbC,IAAI,IAAK;MACRP,SAAS,CAACO,IAAI,CAAC;IACjB,CAAC,EACAC,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdgB,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAG,QAAyC;IAAA,IAAxC;MAAEC,SAAS;MAAEC,UAAU;MAAEC;IAAS,CAAC;IACtDX,EAAE,CAACY,GAAG,CAAC;MACLC,IAAI,EAAEJ,SAAS;MACfK,KAAK,EAAEJ,UAAU;MACjBK,GAAG,EAAEJ,QAAQ;MACbK,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACb,IAAI,CACJC,IAAI,IAAK;MACRJ,eAAe,CAAC,gBAAgB,EAAE;QAAEiB,OAAO,EAAE;MAAU,CAAC,CAAC;MACzDhB,YAAY,EAAE;IAChB,CAAC,EACAI,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBL,eAAe,CAAC,8BAA8B,EAAE;QAAEiB,OAAO,EAAE;MAAQ,CAAC,CAAC;IACvE,CAAC,CACF;EACH,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,UAAU;MAAC,KAAK,EAAC,OAAO;MAAA,UAAC;IAAgC;MAAA;MAAA;MAAA;IAAA,QAAa,eAEvE,QAAC,aAAa;MAAC,IAAI,EAAEvB,IAAK;MAAC,MAAM,EAAEI,MAAO;MAAC,WAAW,EAAES;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACtE;AAEP;AAAC,GAhDuBd,GAAG;EAAA,QAIdH,YAAY,EACKE,WAAW;AAAA;AAAA,KALjBC,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}