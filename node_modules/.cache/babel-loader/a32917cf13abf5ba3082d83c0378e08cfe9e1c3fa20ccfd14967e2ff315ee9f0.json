{"ast":null,"code":"var _jsxFileName = \"H:\\\\DarkSaber\\\\bingo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DBConfig } from \"./DBConfig\";\nimport { initDB } from \"react-indexed-db\";\nimport { IndexedDB, useIndexedDB } from \"react-indexed-db\";\nimport Groups from \"./Groups\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninitDB(DBConfig);\nexport default function App() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const db = useIndexedDB(\"Groups\");\n  useEffect(() => {\n    db.getAll().then(resp => {\n      console.log(resp);\n      setGroups(resp);\n    }, error => {\n      console.log(error);\n    });\n  }, [db]);\n  return /*#__PURE__*/_jsxDEV(IndexedDB, {\n    ...DBConfig,\n    children: groups.map(group => /*#__PURE__*/_jsxDEV(Groups, {\n      group: group\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1XEt1v/65a0tgs1+WI6m5mBezJI=\", false, function () {\n  return [useIndexedDB];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DBConfig","initDB","IndexedDB","useIndexedDB","Groups","App","groups","setGroups","db","getAll","then","resp","console","log","error","map","group"],"sources":["H:/DarkSaber/bingo/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DBConfig } from \"./DBConfig\";\nimport { initDB } from \"react-indexed-db\";\nimport { IndexedDB, useIndexedDB } from \"react-indexed-db\";\nimport Groups from \"./Groups\";\ninitDB(DBConfig);\n\nexport default function App() {\n  const [groups, setGroups] = useState([]);\n  const db = useIndexedDB(\"Groups\");\n  useEffect(() => {\n    db.getAll().then(\n      (resp) => {\n        console.log(resp);\n        setGroups(resp);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }, [db]);\n\n  return (\n    <IndexedDB {...DBConfig}>\n      {groups.map((group) => (\n        <Groups group={group} />\n      ))}\n    </IndexedDB>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,SAAS,EAAEC,YAAY,QAAQ,kBAAkB;AAC1D,OAAOC,MAAM,MAAM,UAAU;AAAC;AAC9BH,MAAM,CAACD,QAAQ,CAAC;AAEhB,eAAe,SAASK,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,EAAE,GAAGL,YAAY,CAAC,QAAQ,CAAC;EACjCL,SAAS,CAAC,MAAM;IACdU,EAAE,CAACC,MAAM,EAAE,CAACC,IAAI,CACbC,IAAI,IAAK;MACRC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBJ,SAAS,CAACI,IAAI,CAAC;IACjB,CAAC,EACAG,KAAK,IAAK;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CACF;EACH,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,oBACE,QAAC,SAAS;IAAA,GAAKR,QAAQ;IAAA,UACpBM,MAAM,CAACS,GAAG,CAAEC,KAAK,iBAChB,QAAC,MAAM;MAAC,KAAK,EAAEA;IAAM;MAAA;MAAA;MAAA;IAAA,QACtB;EAAC;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB;AAAC,GAtBuBX,GAAG;EAAA,QAEdF,YAAY;AAAA;AAAA,KAFDE,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}