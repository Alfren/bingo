{"ast":null,"code":"var _jsxFileName = \"H:\\\\DarkSaber\\\\bingo\\\\src\\\\NewGroupForm.js\";\nimport React from \"react\";\nimport { Button, Grid, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewGroupForm(_ref) {\n  let {\n    db\n  } = _ref;\n  const addGroup = () => {\n    try {\n      db.add({\n        name: \"Test Group\",\n        count: [2, 3, 4, 1, 5, 6, 3, 3, 5],\n        next: 4\n      }).then(resp => {\n        console.log(resp);\n      }, error => {\n        throw new Error(error.target.error);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        label: \"Group Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        label: \"Min Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        label: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        onClick: addGroup,\n        children: \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = NewGroupForm;\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["React","Button","Grid","TextField","NewGroupForm","db","addGroup","add","name","count","next","then","resp","console","log","error","Error","target"],"sources":["H:/DarkSaber/bingo/src/NewGroupForm.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Grid, TextField } from \"@mui/material\";\n\nexport default function NewGroupForm({ db }) {\n  const addGroup = () => {\n    try {\n      db.add({\n        name: \"Test Group\",\n        count: [2, 3, 4, 1, 5, 6, 3, 3, 5],\n        next: 4,\n      }).then(\n        (resp) => {\n          console.log(resp);\n        },\n        (error) => {\n          throw new Error(error.target.error);\n        }\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item>\n        <TextField type=\"text\" label=\"Group Name\" />\n      </Grid>\n      <Grid item>\n        <TextField type=\"number\" label=\"Min Number\" />\n      </Grid>\n      <Grid item>\n        <TextField type=\"number\" label=\"Count\" />\n      </Grid>\n      <Grid item>\n        <Button variant=\"contained\" size=\"large\" onClick={addGroup}>\n          Add Group\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,QAAQ,eAAe;AAAC;AAExD,eAAe,SAASC,YAAY,OAAS;EAAA,IAAR;IAAEC;EAAG,CAAC;EACzC,MAAMC,QAAQ,GAAG,MAAM;IACrB,IAAI;MACFD,EAAE,CAACE,GAAG,CAAC;QACLC,IAAI,EAAE,YAAY;QAClBC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAClCC,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,IAAI,CACJC,IAAI,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC,EACAG,KAAK,IAAK;QACT,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,MAAM,CAACF,KAAK,CAAC;MACrC,CAAC,CACF;IACH,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACD,oBACE,QAAC,IAAI;IAAC,SAAS;IAAA,wBACb,QAAC,IAAI;MAAC,IAAI;MAAA,uBACR,QAAC,SAAS;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvC,eACP,QAAC,IAAI;MAAC,IAAI;MAAA,uBACR,QAAC,SAAS;QAAC,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACzC,eACP,QAAC,IAAI;MAAC,IAAI;MAAA,uBACR,QAAC,SAAS;QAAC,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpC,eACP,QAAC,IAAI;MAAC,IAAI;MAAA,uBACR,QAAC,MAAM;QAAC,OAAO,EAAC,WAAW;QAAC,IAAI,EAAC,OAAO;QAAC,OAAO,EAAET,QAAS;QAAA,UAAC;MAE5D;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEX;AAAC,KArCuBF,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}