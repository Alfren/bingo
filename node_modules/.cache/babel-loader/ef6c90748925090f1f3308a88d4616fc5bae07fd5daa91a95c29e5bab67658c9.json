{"ast":null,"code":"var _jsxFileName = \"H:\\\\DarkSaber\\\\bingo\\\\src\\\\components\\\\NewGroupModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Close } from \"@mui/icons-material\";\nimport { Button, Card, Grid, IconButton, Modal, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewGroupModal(_ref) {\n  _s();\n  let {\n    show,\n    toggle,\n    createGroup\n  } = _ref;\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupMin, setGroupMin] = useState(\"\");\n  const [groupCount, setGroupCount] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: show,\n    onClose: toggle,\n    sx: modalStyle,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: cardStyle,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"error\",\n        size: \"large\",\n        sx: {\n          position: \"absolute\",\n          top: 5,\n          right: 5\n        },\n        onClick: toggle,\n        children: /*#__PURE__*/_jsxDEV(Close, {\n          sx: {\n            fontSize: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        mb: 2,\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        columnGap: 3,\n        rowGap: 2,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Group Name\",\n            value: groupName,\n            onChange: e => setGroupName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Lowest Number\",\n            value: groupMin,\n            type: \"number\",\n            onChange: e => setGroupMin(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Group Count\",\n            value: groupCount,\n            type: \"number\",\n            onChange: e => setGroupCount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            size: \"large\",\n            variant: \"contained\",\n            disabled: !groupName || !groupMin || !groupCount,\n            onClick: () => {\n              createGroup({\n                groupName,\n                groupCount,\n                groupMin\n              });\n              setGroupName(\"\");\n              setGroupCount(\"\");\n              setGroupMin(\"\");\n            },\n            children: \"Create Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupModal, \"R3KgBUqUIygdN0ui5QHc8SUC19Y=\");\n_c = NewGroupModal;\nconst modalStyle = {\n    width: \"1000px\",\n    maxWidth: \"90vw\",\n    m: \"8rem auto 0 auto\"\n  },\n  cardStyle = {\n    p: 2\n  };\nvar _c;\n$RefreshReg$(_c, \"NewGroupModal\");","map":{"version":3,"names":["React","useState","Close","Button","Card","Grid","IconButton","Modal","TextField","Typography","NewGroupModal","show","toggle","createGroup","groupName","setGroupName","groupMin","setGroupMin","groupCount","setGroupCount","modalStyle","cardStyle","position","top","right","fontSize","e","target","value","width","maxWidth","m","p"],"sources":["H:/DarkSaber/bingo/src/components/NewGroupModal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Close } from \"@mui/icons-material\";\nimport {\n  Button,\n  Card,\n  Grid,\n  IconButton,\n  Modal,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nexport default function NewGroupModal({ show, toggle, createGroup }) {\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupMin, setGroupMin] = useState(\"\");\n  const [groupCount, setGroupCount] = useState(\"\");\n  return (\n    <Modal open={show} onClose={toggle} sx={modalStyle}>\n      <Card sx={cardStyle}>\n        <IconButton\n          color=\"error\"\n          size=\"large\"\n          sx={{ position: \"absolute\", top: 5, right: 5 }}\n          onClick={toggle}\n        >\n          <Close sx={{ fontSize: 35 }} />\n        </IconButton>\n        <Typography variant=\"h4\" align=\"center\" mb={2}>\n          Create Group\n        </Typography>\n        <Grid container columnGap={3} rowGap={2} justifyContent=\"center\">\n          <Grid item>\n            <TextField\n              label=\"Group Name\"\n              value={groupName}\n              onChange={(e) => setGroupName(e.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              label=\"Lowest Number\"\n              value={groupMin}\n              type=\"number\"\n              onChange={(e) => setGroupMin(e.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              label=\"Group Count\"\n              value={groupCount}\n              type=\"number\"\n              onChange={(e) => setGroupCount(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <Button\n              color=\"success\"\n              size=\"large\"\n              variant=\"contained\"\n              disabled={!groupName || !groupMin || !groupCount}\n              onClick={() => {\n                createGroup({ groupName, groupCount, groupMin });\n                setGroupName(\"\");\n                setGroupCount(\"\");\n                setGroupMin(\"\");\n              }}\n            >\n              Create Group\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n    </Modal>\n  );\n}\n\nconst modalStyle = {\n    width: \"1000px\",\n    maxWidth: \"90vw\",\n    m: \"8rem auto 0 auto\",\n  },\n  cardStyle = {\n    p: 2,\n  };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SACEC,MAAM,EACNC,IAAI,EACJC,IAAI,EACJC,UAAU,EACVC,KAAK,EACLC,SAAS,EACTC,UAAU,QACL,eAAe;AAAC;AAEvB,eAAe,SAASC,aAAa,OAAgC;EAAA;EAAA,IAA/B;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAY,CAAC;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,oBACE,QAAC,KAAK;IAAC,IAAI,EAAEU,IAAK;IAAC,OAAO,EAAEC,MAAO;IAAC,EAAE,EAAEQ,UAAW;IAAA,uBACjD,QAAC,IAAI;MAAC,EAAE,EAAEC,SAAU;MAAA,wBAClB,QAAC,UAAU;QACT,KAAK,EAAC,OAAO;QACb,IAAI,EAAC,OAAO;QACZ,EAAE,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEC,GAAG,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAE,CAAE;QAC/C,OAAO,EAAEZ,MAAO;QAAA,uBAEhB,QAAC,KAAK;UAAC,EAAE,EAAE;YAAEa,QAAQ,EAAE;UAAG;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACpB,eACb,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,KAAK,EAAC,QAAQ;QAAC,EAAE,EAAE,CAAE;QAAA,UAAC;MAE/C;QAAA;QAAA;QAAA;MAAA,QAAa,eACb,QAAC,IAAI;QAAC,SAAS;QAAC,SAAS,EAAE,CAAE;QAAC,MAAM,EAAE,CAAE;QAAC,cAAc,EAAC,QAAQ;QAAA,wBAC9D,QAAC,IAAI;UAAC,IAAI;UAAA,uBACR,QAAC,SAAS;YACR,KAAK,EAAC,YAAY;YAClB,KAAK,EAAEX,SAAU;YACjB,QAAQ,EAAGY,CAAC,IAAKX,YAAY,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA;QAC9C;UAAA;UAAA;UAAA;QAAA,QACG,eACP,QAAC,IAAI;UAAC,IAAI;UAAA,uBACR,QAAC,SAAS;YACR,KAAK,EAAC,eAAe;YACrB,KAAK,EAAEZ,QAAS;YAChB,IAAI,EAAC,QAAQ;YACb,QAAQ,EAAGU,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA;QAC7C;UAAA;UAAA;UAAA;QAAA,QACG,eACP,QAAC,IAAI;UAAC,IAAI;UAAA,uBACR,QAAC,SAAS;YACR,KAAK,EAAC,aAAa;YACnB,KAAK,EAAEV,UAAW;YAClB,IAAI,EAAC,QAAQ;YACb,QAAQ,EAAGQ,CAAC,IAAKP,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA;QAC/C;UAAA;UAAA;UAAA;QAAA,QACG,eACP,QAAC,IAAI;UAAC,IAAI;UAAC,EAAE,EAAE,EAAG;UAAC,KAAK,EAAC,QAAQ;UAAA,uBAC/B,QAAC,MAAM;YACL,KAAK,EAAC,SAAS;YACf,IAAI,EAAC,OAAO;YACZ,OAAO,EAAC,WAAW;YACnB,QAAQ,EAAE,CAACd,SAAS,IAAI,CAACE,QAAQ,IAAI,CAACE,UAAW;YACjD,OAAO,EAAE,MAAM;cACbL,WAAW,CAAC;gBAAEC,SAAS;gBAAEI,UAAU;gBAAEF;cAAS,CAAC,CAAC;cAChDD,YAAY,CAAC,EAAE,CAAC;cAChBI,aAAa,CAAC,EAAE,CAAC;cACjBF,WAAW,CAAC,EAAE,CAAC;YACjB,CAAE;YAAA,UACH;UAED;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAEZ;AAAC,GA9DuBP,aAAa;AAAA,KAAbA,aAAa;AAgErC,MAAMU,UAAU,GAAG;IACfS,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,MAAM;IAChBC,CAAC,EAAE;EACL,CAAC;EACDV,SAAS,GAAG;IACVW,CAAC,EAAE;EACL,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}