{"ast":null,"code":"var _jsxFileName = \"H:\\\\DarkSaber\\\\bingo\\\\src\\\\components\\\\NewGroupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Card, Grid, IconButton, Modal, TextField, Typography } from \"@mui/material\";\nimport { Add, Close, Menu } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewGroupForm(_ref) {\n  _s();\n  let {\n    db,\n    show,\n    toggle\n  } = _ref;\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupMinNum, setGroupMinNum] = useState(\"\");\n  const [groupCount, setGroupCount] = useState(\"\");\n  const addGroup = () => {\n    // if(!groupName){}\n    try {\n      db.add({\n        name: \"Test Group\",\n        count: [2, 3, 4, 1, 5, 6, 3, 3, 5],\n        next: 4\n      }).then(resp => {\n        console.log(resp);\n      }, error => {\n        throw new Error(error.target.error);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: show,\n    onClose: toggle,\n    sx: {\n      width: \"fit-content\",\n      maxWidth: \"90vw\",\n      margin: \"2rem auto 0 auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        py: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggle,\n        color: show ? \"error\" : \"default\",\n        sx: menuStyle,\n        children: show ? /*#__PURE__*/_jsxDEV(Close, {\n          sx: {\n            fontSize: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Menu, {\n          sx: {\n            fontSize: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"New Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"space-evenly\",\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            label: \"Group Name\",\n            value: groupName,\n            onChange: e => setGroupName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            label: \"Min Number\",\n            value: groupMinNum,\n            onChange: e => setGroupMinNum(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            label: \"Count\",\n            value: groupCount,\n            onChange: e => setGroupCount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 12,\n          xs: 12,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addGroup,\n            color: \"success\",\n            variant: \"contained\",\n            disabled: !groupName || !groupMinNum || !groupCount,\n            children: [/*#__PURE__*/_jsxDEV(Add, {\n              sx: {\n                fontSize: 30,\n                position: \"relative\",\n                right: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), \" Add Group\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGroupForm, \"ji6iR96hVX6kVLmRBwNfdIQfBtk=\");\n_c = NewGroupForm;\nconst menuStyle = {\n  position: \"absolute\",\n  right: \"5px\",\n  top: \"5px\"\n};\nvar _c;\n$RefreshReg$(_c, \"NewGroupForm\");","map":{"version":3,"names":["React","useState","Button","Card","Grid","IconButton","Modal","TextField","Typography","Add","Close","Menu","NewGroupForm","db","show","toggle","groupName","setGroupName","groupMinNum","setGroupMinNum","groupCount","setGroupCount","addGroup","add","name","count","next","then","resp","console","log","error","Error","target","width","maxWidth","margin","py","menuStyle","fontSize","e","value","position","right","top"],"sources":["H:/DarkSaber/bingo/src/components/NewGroupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Grid,\n  IconButton,\n  Modal,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Add, Close, Menu } from \"@mui/icons-material\";\n\nexport default function NewGroupForm({ db, show, toggle }) {\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupMinNum, setGroupMinNum] = useState(\"\");\n  const [groupCount, setGroupCount] = useState(\"\");\n  const addGroup = () => {\n    // if(!groupName){}\n    try {\n      db.add({\n        name: \"Test Group\",\n        count: [2, 3, 4, 1, 5, 6, 3, 3, 5],\n        next: 4,\n      }).then(\n        (resp) => {\n          console.log(resp);\n        },\n        (error) => {\n          throw new Error(error.target.error);\n        }\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <Modal\n      open={show}\n      onClose={toggle}\n      sx={{\n        width: \"fit-content\",\n        maxWidth: \"90vw\",\n        margin: \"2rem auto 0 auto\",\n      }}\n    >\n      <Card sx={{ py: 3 }}>\n        <IconButton\n          onClick={toggle}\n          color={show ? \"error\" : \"default\"}\n          sx={menuStyle}\n        >\n          {show ? (\n            <Close sx={{ fontSize: 35 }} />\n          ) : (\n            <Menu sx={{ fontSize: 35 }} />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" align=\"center\">\n          New Group\n        </Typography>\n        <Grid container justifyContent=\"space-evenly\" gap={2}>\n          <Grid item>\n            <TextField\n              type=\"text\"\n              label=\"Group Name\"\n              value={groupName}\n              onChange={(e) => setGroupName(e.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              type=\"number\"\n              label=\"Min Number\"\n              value={groupMinNum}\n              onChange={(e) => setGroupMinNum(e.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              type=\"number\"\n              label=\"Count\"\n              value={groupCount}\n              onChange={(e) => setGroupCount(e.target.value)}\n            />\n          </Grid>\n          <Grid item xl={3} lg={3} md={3} sm={12} xs={12} align=\"center\">\n            <Button\n              onClick={addGroup}\n              color=\"success\"\n              variant=\"contained\"\n              disabled={!groupName || !groupMinNum || !groupCount}\n            >\n              <Add sx={{ fontSize: 30, position: \"relative\", right: 8 }} /> Add\n              Group\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n    </Modal>\n  );\n}\n\nconst menuStyle = {\n  position: \"absolute\",\n  right: \"5px\",\n  top: \"5px\",\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}